name: user-service

on:
  # User브랜치에서 일어난 push/pull request에 작동한다.
  push:
    branches: [ "user-service" ]
  pull_request:
    branches: [ "user-service" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# This workflow contains a single job called "build"
jobs:
  build:
    # machine which runner would use
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: JDK 17 설치
        uses: actions/setup-java@v4.0.0
        with:
          java-version: '17'
          distribution: 'zulu'

      - name: application.yml 생성
        shell: bash
        run: |
          mkdir user-service/src/main/resources
          cd user-service/src/main/resources
          touch ./application.yml

          echo "${{ secrets.USER_APPLICATIONYML }}" >> ./application.yml
          
      - name: Grant execute permission for gradlew
        run: chmod +x user-service/gradlew
      
      - name: Build with Gradle
        run: |
          cd user-service
          ./gradlew clean --stacktrace --info build

      - name: archive repository #tar 명령어를 이용하여 User폴더 압축 
        run: tar cvfz ./user-service.tar.gz user-service/*
         
        # github secret 이용하여 AWS설정
      - name: AWS configure credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.USER_ACCESS }}
          aws-secret-access-key: ${{ secrets.USER_SECRET_ACCESS }}
          aws-region: ap-northeast-2
          
        # 압축파일 이름, 버켓 이름 설정에 주의
      - name: upload to S3
        run: aws s3 cp --region ap-northeast-2 ./user-service.tar.gz s3://osio-s3/user-service/
        
        # codeDeploy 실행, 다양한 이름 설정에 주의
      - name: deploy with AWS codeDeploy
        run: aws deploy create-deployment
          --application-name codedeploy-user
          --deployment-config-name CodeDeployDefault.OneAtATime
          --deployment-group-name deploy-group-user
          --s3-location bucket=osio-s3,bundleType=tgz,key=user-service/user-service.tar.gz
          --service-role-arn arn:aws:iam::123456789012:role/CodeDeployServiceRole

      - name: MySQL 설정
        uses: mirromutth/mysql-action@v1.1
        with:
          # host port: 3306 # default value is 3306. The port of host
          # container port: 3306 # default value is 3306. The port of container
          character set server: 'utf8' #default value is 'utf8mb4'
          collation server: 'utf8_general_ci' # default value is 'utf8mb4_general_ci'. The '--collation-server' option for mysqld
          mysql version: '8.0.33' # 프로젝트에 맞게 입력, Optional, default value is "latest". The version of the MySQL
          # mysql database: 'some_test' # Optional, default value is "test". The specified database which will be create
          mysql user: cow
          mysql password: ${{ secrets.USER_MYSQL_PASSWORD }} # 이 항목을 작성하거나 아래 두 항목을 작성해야한다.
          # mysql user: admin
          # mysql password: ${{ secrets.ROOT_PASSWORD }}
